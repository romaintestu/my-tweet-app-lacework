name: GitHub Actions test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
    build:
        # ...
        runs-on: ubuntu-latest
        steps:

         - name: Check out 
           uses: actions/checkout@v2

         - name: Get short SHA
           run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

         - name: Build
           uses: docker/build-push-action@v2
           with:
             tags: romaintestu/my-tweet-app-lacework:${{ env.GHA_SHA }},romaintestu/my-tweet-app-lacework:latest
             load: true

         - name: lw-scanner LWK Inline Scanner latest
           uses: lacework/lw-scanner-action@v1.3.0
           with:
            #LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
            LW_ACCOUNT_NAME: lwintforticnappeu 
            LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}   
            
            IMAGE_NAME: romaintestu/my-tweet-app-lacework
            IMAGE_TAG: ${{ env.GHA_SHA }}
            SAVE_RESULTS_IN_LACEWORK: true
            SAVE_BUILD_REPORT: true
            BUILD_REPORT_FILE_NAME: myreport.html
            SEVERITY_THRESHOLD: fixable
            USE_POLICY: true
            
         - name: Context
           if: ${{ failure() }} 
           run: echo Context ${{ toJSON(steps.lw-scanner.outputs) }}       

         - name: Login to DockerHub
           uses: docker/login-action@v1
           with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}

         - name: tag and push
           uses: docker/build-push-action@v2
           with:
             push: true
             tags: romaintestu/my-tweet-app-lacework:${{ env.GHA_SHA }},romaintestu/my-tweet-app-lacework:latest,romaintestu/my-tweet-app-lacework:production
             
             
         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: us-east-1

         - name: deploy to cluster
           uses: kodermax/kubectl-aws-eks@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: set image deployment/my-tweet-app my-tweet-app=romaintestu/my-tweet-app-lacework:${{ env.GHA_SHA }} -n my-application
             #args: set image deployment/my-tweet-app my-tweet-app=romaintestu/my-tweet-app-lacework:latest -n my-application

         - name: verify deployment
           uses: kodermax/kubectl-aws-eks@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: rollout status deployment/my-tweet-app -w -n my-application
